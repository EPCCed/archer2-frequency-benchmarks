//
// auto-generated by ops.py//

#include "./OpenACC/OpenSBLI_common.h"


void ops_decl_const_char(int dim, char const *type,
int size, char *dat, char const *name){
  if (!strcmp(name,"nx2")) {
    nx2 = *(int*)dat;
  }
  else
  if (!strcmp(name,"nx1")) {
    nx1 = *(int*)dat;
  }
  else
  if (!strcmp(name,"deltai2")) {
    deltai2 = *(double*)dat;
  }
  else
  if (!strcmp(name,"rinv9")) {
    rinv9 = *(double*)dat;
  }
  else
  if (!strcmp(name,"Minf")) {
    Minf = *(double*)dat;
  }
  else
  if (!strcmp(name,"rinv1")) {
    rinv1 = *(double*)dat;
  }
  else
  if (!strcmp(name,"rinv4")) {
    rinv4 = *(double*)dat;
  }
  else
  if (!strcmp(name,"rinv5")) {
    rinv5 = *(double*)dat;
  }
  else
  if (!strcmp(name,"rinv6")) {
    rinv6 = *(double*)dat;
  }
  else
  if (!strcmp(name,"Pr")) {
    Pr = *(double*)dat;
  }
  else
  if (!strcmp(name,"rinv12")) {
    rinv12 = *(double*)dat;
  }
  else
  if (!strcmp(name,"rinv13")) {
    rinv13 = *(double*)dat;
  }
  else
  if (!strcmp(name,"rinv10")) {
    rinv10 = *(double*)dat;
  }
  else
  if (!strcmp(name,"rinv11")) {
    rinv11 = *(double*)dat;
  }
  else
  if (!strcmp(name,"rc8")) {
    rc8 = *(double*)dat;
  }
  else
  if (!strcmp(name,"rinv14")) {
    rinv14 = *(double*)dat;
  }
  else
  if (!strcmp(name,"rinv15")) {
    rinv15 = *(double*)dat;
  }
  else
  if (!strcmp(name,"rc7")) {
    rc7 = *(double*)dat;
  }
  else
  if (!strcmp(name,"rc0")) {
    rc0 = *(double*)dat;
  }
  else
  if (!strcmp(name,"rc2")) {
    rc2 = *(double*)dat;
  }
  else
  if (!strcmp(name,"rc3")) {
    rc3 = *(double*)dat;
  }
  else
  if (!strcmp(name,"nx0")) {
    nx0 = *(int*)dat;
  }
  else
  if (!strcmp(name,"deltai1")) {
    deltai1 = *(double*)dat;
  }
  else
  if (!strcmp(name,"deltai0")) {
    deltai0 = *(double*)dat;
  }
  else
  if (!strcmp(name,"Re")) {
    Re = *(double*)dat;
  }
  else
  if (!strcmp(name,"deltat")) {
    deltat = *(double*)dat;
  }
  else
  if (!strcmp(name,"gama")) {
    gama = *(double*)dat;
  }
  else
  {
    printf("error: unknown const name\n"); exit(1);
  }
}
