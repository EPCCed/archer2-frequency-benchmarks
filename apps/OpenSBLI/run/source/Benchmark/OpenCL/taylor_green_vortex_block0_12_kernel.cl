//
// auto-generated by ops.py
//

#ifdef OCL_FMA
#pragma OPENCL FP_CONTRACT ON
#else
#pragma OPENCL FP_CONTRACT OFF
#endif
#pragma OPENCL EXTENSION cl_khr_fp64:enable

#include "ops_opencl_reduction.h"

#ifndef MIN
#define MIN(a,b) ((a<b) ? (a) : (b))
#endif
#ifndef MAX
#define MAX(a,b) ((a>b) ? (a) : (b))
#endif
#ifndef SIGN
#define SIGN(a,b) ((b<0.0) ? (a*(-1)) : (a))
#endif
#define OPS_READ 0
#define OPS_WRITE 1
#define OPS_RW 2
#define OPS_INC 3
#define OPS_MIN 4
#define OPS_MAX 5
#define ZERO_double 0.0;
#define INFINITY_double INFINITY;
#define ZERO_float 0.0f;
#define INFINITY_float INFINITY;
#define ZERO_int 0;
#define INFINITY_int INFINITY;
#define ZERO_uint 0;
#define INFINITY_uint INFINITY;
#define ZERO_ll 0;
#define INFINITY_ll INFINITY;
#define ZERO_ull 0;
#define INFINITY_ull INFINITY;
#define ZERO_bool 0;

#undef OPS_ACC0
#undef OPS_ACC1
#undef OPS_ACC2
#undef OPS_ACC3
#undef OPS_ACC4
#undef OPS_ACC5
#undef OPS_ACC6
#undef OPS_ACC7
#undef OPS_ACC8
#undef OPS_ACC9
#undef OPS_ACC10
#undef OPS_ACC11
#undef OPS_ACC12
#undef OPS_ACC13
#undef OPS_ACC14
#undef OPS_ACC15
#undef OPS_ACC16
#undef OPS_ACC17
#undef OPS_ACC18
#undef OPS_ACC19
#undef OPS_ACC20
#undef OPS_ACC21
#undef OPS_ACC22
#undef OPS_ACC23


#define OPS_ACC0(x,y,z) (x+xdim0_taylor_green_vortex_block0_12_kernel*(y)+xdim0_taylor_green_vortex_block0_12_kernel*ydim0_taylor_green_vortex_block0_12_kernel*(z))
#define OPS_ACC1(x,y,z) (x+xdim1_taylor_green_vortex_block0_12_kernel*(y)+xdim1_taylor_green_vortex_block0_12_kernel*ydim1_taylor_green_vortex_block0_12_kernel*(z))
#define OPS_ACC2(x,y,z) (x+xdim2_taylor_green_vortex_block0_12_kernel*(y)+xdim2_taylor_green_vortex_block0_12_kernel*ydim2_taylor_green_vortex_block0_12_kernel*(z))
#define OPS_ACC3(x,y,z) (x+xdim3_taylor_green_vortex_block0_12_kernel*(y)+xdim3_taylor_green_vortex_block0_12_kernel*ydim3_taylor_green_vortex_block0_12_kernel*(z))
#define OPS_ACC4(x,y,z) (x+xdim4_taylor_green_vortex_block0_12_kernel*(y)+xdim4_taylor_green_vortex_block0_12_kernel*ydim4_taylor_green_vortex_block0_12_kernel*(z))
#define OPS_ACC5(x,y,z) (x+xdim5_taylor_green_vortex_block0_12_kernel*(y)+xdim5_taylor_green_vortex_block0_12_kernel*ydim5_taylor_green_vortex_block0_12_kernel*(z))
#define OPS_ACC6(x,y,z) (x+xdim6_taylor_green_vortex_block0_12_kernel*(y)+xdim6_taylor_green_vortex_block0_12_kernel*ydim6_taylor_green_vortex_block0_12_kernel*(z))
#define OPS_ACC7(x,y,z) (x+xdim7_taylor_green_vortex_block0_12_kernel*(y)+xdim7_taylor_green_vortex_block0_12_kernel*ydim7_taylor_green_vortex_block0_12_kernel*(z))
#define OPS_ACC8(x,y,z) (x+xdim8_taylor_green_vortex_block0_12_kernel*(y)+xdim8_taylor_green_vortex_block0_12_kernel*ydim8_taylor_green_vortex_block0_12_kernel*(z))
#define OPS_ACC9(x,y,z) (x+xdim9_taylor_green_vortex_block0_12_kernel*(y)+xdim9_taylor_green_vortex_block0_12_kernel*ydim9_taylor_green_vortex_block0_12_kernel*(z))
#define OPS_ACC10(x,y,z) (x+xdim10_taylor_green_vortex_block0_12_kernel*(y)+xdim10_taylor_green_vortex_block0_12_kernel*ydim10_taylor_green_vortex_block0_12_kernel*(z))
#define OPS_ACC11(x,y,z) (x+xdim11_taylor_green_vortex_block0_12_kernel*(y)+xdim11_taylor_green_vortex_block0_12_kernel*ydim11_taylor_green_vortex_block0_12_kernel*(z))
#define OPS_ACC12(x,y,z) (x+xdim12_taylor_green_vortex_block0_12_kernel*(y)+xdim12_taylor_green_vortex_block0_12_kernel*ydim12_taylor_green_vortex_block0_12_kernel*(z))
#define OPS_ACC13(x,y,z) (x+xdim13_taylor_green_vortex_block0_12_kernel*(y)+xdim13_taylor_green_vortex_block0_12_kernel*ydim13_taylor_green_vortex_block0_12_kernel*(z))
#define OPS_ACC14(x,y,z) (x+xdim14_taylor_green_vortex_block0_12_kernel*(y)+xdim14_taylor_green_vortex_block0_12_kernel*ydim14_taylor_green_vortex_block0_12_kernel*(z))
#define OPS_ACC15(x,y,z) (x+xdim15_taylor_green_vortex_block0_12_kernel*(y)+xdim15_taylor_green_vortex_block0_12_kernel*ydim15_taylor_green_vortex_block0_12_kernel*(z))
#define OPS_ACC16(x,y,z) (x+xdim16_taylor_green_vortex_block0_12_kernel*(y)+xdim16_taylor_green_vortex_block0_12_kernel*ydim16_taylor_green_vortex_block0_12_kernel*(z))
#define OPS_ACC17(x,y,z) (x+xdim17_taylor_green_vortex_block0_12_kernel*(y)+xdim17_taylor_green_vortex_block0_12_kernel*ydim17_taylor_green_vortex_block0_12_kernel*(z))
#define OPS_ACC18(x,y,z) (x+xdim18_taylor_green_vortex_block0_12_kernel*(y)+xdim18_taylor_green_vortex_block0_12_kernel*ydim18_taylor_green_vortex_block0_12_kernel*(z))
#define OPS_ACC19(x,y,z) (x+xdim19_taylor_green_vortex_block0_12_kernel*(y)+xdim19_taylor_green_vortex_block0_12_kernel*ydim19_taylor_green_vortex_block0_12_kernel*(z))
#define OPS_ACC20(x,y,z) (x+xdim20_taylor_green_vortex_block0_12_kernel*(y)+xdim20_taylor_green_vortex_block0_12_kernel*ydim20_taylor_green_vortex_block0_12_kernel*(z))
#define OPS_ACC21(x,y,z) (x+xdim21_taylor_green_vortex_block0_12_kernel*(y)+xdim21_taylor_green_vortex_block0_12_kernel*ydim21_taylor_green_vortex_block0_12_kernel*(z))
#define OPS_ACC22(x,y,z) (x+xdim22_taylor_green_vortex_block0_12_kernel*(y)+xdim22_taylor_green_vortex_block0_12_kernel*ydim22_taylor_green_vortex_block0_12_kernel*(z))
#define OPS_ACC23(x,y,z) (x+xdim23_taylor_green_vortex_block0_12_kernel*(y)+xdim23_taylor_green_vortex_block0_12_kernel*ydim23_taylor_green_vortex_block0_12_kernel*(z))


//user function
void taylor_green_vortex_block0_12_kernel(const __global double * restrict wk3,const __global double * restrict u0,const __global double * restrict rhoE,
const __global double * restrict p,const __global double * restrict wk1,const __global double * restrict wk2,const __global double * restrict wk5,
const __global double * restrict wk6,const __global double * restrict rho,const __global double * restrict rhou2,const __global double * restrict rhou1,
const __global double * restrict wk4,const __global double * restrict rhou0,const __global double * restrict wk7,const __global double * restrict u1,
const __global double * restrict u2,const __global double * restrict wk0,const __global double * restrict T,const __global double * restrict wk8,
__global double * restrict wk10,__global double * restrict wk11,__global double * restrict wk12,__global double * restrict wk13,
__global double * restrict wk9,
  const double rinv9,
const double rinv1,
const double rinv4,
const double rinv5,
const double rinv6,
const double rinv12,
const double rinv13,
const double rinv10,
const double rinv11,
const double rc8,
const double rinv14,
const double rc7,
const double rc2,
const double rc3)


{
    double temp_eval0 = rinv1*((rc2)*rhoE[OPS_ACC2(0,0,-2)] - rc3*rhoE[OPS_ACC2(0,0,-1)] + (rc3)*rhoE[OPS_ACC2(0,0,1)] - rc2*rhoE[OPS_ACC2(0,0,2)]);
    double temp_eval1 = rinv1*((rc2)*rhou1[OPS_ACC10(0,0,-2)] - rc3*rhou1[OPS_ACC10(0,0,-1)] + (rc3)*rhou1[OPS_ACC10(0,0,1)] - rc2*rhou1[OPS_ACC10(0,0,2)]);
    double temp_eval2 = rinv4*((rc2)*rhou0[OPS_ACC12(0,-2,0)] - rc3*rhou0[OPS_ACC12(0,-1,0)] + (rc3)*rhou0[OPS_ACC12(0,1,0)] - rc2*rhou0[OPS_ACC12(0,2,0)]);
    double temp_eval3 = rinv5*((rc2)*rhou2[OPS_ACC9(-2,0,0)] - rc3*rhou2[OPS_ACC9(-1,0,0)] + (rc3)*rhou2[OPS_ACC9(1,0,0)] - rc2*rhou2[OPS_ACC9(2,0,0)]);
    double temp_eval4 = rinv5*((rc2)*rhou1[OPS_ACC10(-2,0,0)] - rc3*rhou1[OPS_ACC10(-1,0,0)] + (rc3)*rhou1[OPS_ACC10(1,0,0)] - rc2*rhou1[OPS_ACC10(2,0,0)]);
    double temp_eval5 = rinv5*((rc2)*rhou0[OPS_ACC12(-2,0,0)] - rc3*rhou0[OPS_ACC12(-1,0,0)] + (rc3)*rhou0[OPS_ACC12(1,0,0)] - rc2*rhou0[OPS_ACC12(2,0,0)]);
    double temp_eval6 = rinv4*((rc2)*rho[OPS_ACC8(0,-2,0)]*u1[OPS_ACC14(0,-2,0)] - rc3*rho[OPS_ACC8(0,-1,0)]*u1[OPS_ACC14(0,-1,0)] + (rc3)*rho[OPS_ACC8(0,1,0)]*u1[OPS_ACC14(0,1,0)] - rc2*rho[OPS_ACC8(0,2,0)]*u1[OPS_ACC14(0,2,0)]);
    double temp_eval7 = rinv6*(-rc7*u0[OPS_ACC1(0,0,0)] - rc2*u0[OPS_ACC1(0,0,-2)] + (rc8)*u0[OPS_ACC1(0,0,-1)] + (rc8)*u0[OPS_ACC1(0,0,1)] - rc2*u0[OPS_ACC1(0,0,2)]);
    double temp_eval8 = rinv6*(-rc7*u2[OPS_ACC15(0,0,0)] - rc2*u2[OPS_ACC15(0,0,-2)] + (rc8)*u2[OPS_ACC15(0,0,-1)] + (rc8)*u2[OPS_ACC15(0,0,1)] - rc2*u2[OPS_ACC15(0,0,2)]);
    double temp_eval9 = rinv4*((rc2)*rho[OPS_ACC8(0,-2,0)] - rc3*rho[OPS_ACC8(0,-1,0)] + (rc3)*rho[OPS_ACC8(0,1,0)] - rc2*rho[OPS_ACC8(0,2,0)]);
    double temp_eval10 = rinv4*((rc2)*rhou0[OPS_ACC12(0,-2,0)]*u1[OPS_ACC14(0,-2,0)] - rc3*rhou0[OPS_ACC12(0,-1,0)]*u1[OPS_ACC14(0,-1,0)] + (rc3)*rhou0[OPS_ACC12(0,1,0)]*u1[OPS_ACC14(0,1,0)] - rc2*rhou0[OPS_ACC12(0,2,0)]*u1[OPS_ACC14(0,2,0)]);
    double temp_eval11 = rinv6*(-rc7*u1[OPS_ACC14(0,0,0)] - rc2*u1[OPS_ACC14(0,0,-2)] + (rc8)*u1[OPS_ACC14(0,0,-1)] + (rc8)*u1[OPS_ACC14(0,0,1)] - rc2*u1[OPS_ACC14(0,0,2)]);
    double temp_eval12 = rinv4*((rc2)*p[OPS_ACC3(0,-2,0)]*u1[OPS_ACC14(0,-2,0)] - rc3*p[OPS_ACC3(0,-1,0)]*u1[OPS_ACC14(0,-1,0)] + (rc3)*p[OPS_ACC3(0,1,0)]*u1[OPS_ACC14(0,1,0)] - rc2*p[OPS_ACC3(0,2,0)]*u1[OPS_ACC14(0,2,0)]);
    double temp_eval13 = rinv9*(-rc7*u2[OPS_ACC15(0,0,0)] - rc2*u2[OPS_ACC15(-2,0,0)] + (rc8)*u2[OPS_ACC15(-1,0,0)] + (rc8)*u2[OPS_ACC15(1,0,0)] - rc2*u2[OPS_ACC15(2,0,0)]);
    double temp_eval14 = rinv5*((rc2)*rhou1[OPS_ACC10(-2,0,0)]*u0[OPS_ACC1(-2,0,0)] - rc3*rhou1[OPS_ACC10(-1,0,0)]*u0[OPS_ACC1(-1,0,0)] + (rc3)*rhou1[OPS_ACC10(1,0,0)]*u0[OPS_ACC1(1,0,0)] - rc2*rhou1[OPS_ACC10(2,0,0)]*u0[OPS_ACC1(2,0,0)]);
    double temp_eval15 = rinv10*(-rc7*u0[OPS_ACC1(0,0,0)] - rc2*u0[OPS_ACC1(0,-2,0)] + (rc8)*u0[OPS_ACC1(0,-1,0)] + (rc8)*u0[OPS_ACC1(0,1,0)] - rc2*u0[OPS_ACC1(0,2,0)]);
    double temp_eval16 = rinv1*((rc2)*p[OPS_ACC3(0,0,-2)] - rc3*p[OPS_ACC3(0,0,-1)] + (rc3)*p[OPS_ACC3(0,0,1)] - rc2*p[OPS_ACC3(0,0,2)]);
    double temp_eval17 = rinv4*((rc2)*rhoE[OPS_ACC2(0,-2,0)]*u1[OPS_ACC14(0,-2,0)] - rc3*rhoE[OPS_ACC2(0,-1,0)]*u1[OPS_ACC14(0,-1,0)] + (rc3)*rhoE[OPS_ACC2(0,1,0)]*u1[OPS_ACC14(0,1,0)] - rc2*rhoE[OPS_ACC2(0,2,0)]*u1[OPS_ACC14(0,2,0)]);
    double temp_eval18 = rinv5*((rc2)*rho[OPS_ACC8(-2,0,0)] - rc3*rho[OPS_ACC8(-1,0,0)] + (rc3)*rho[OPS_ACC8(1,0,0)] - rc2*rho[OPS_ACC8(2,0,0)]);
    double temp_eval19 = rinv4*((rc2)*rhoE[OPS_ACC2(0,-2,0)] - rc3*rhoE[OPS_ACC2(0,-1,0)] + (rc3)*rhoE[OPS_ACC2(0,1,0)] - rc2*rhoE[OPS_ACC2(0,2,0)]);
    double temp_eval20 = rinv5*((rc2)*rho[OPS_ACC8(-2,0,0)]*u0[OPS_ACC1(-2,0,0)] - rc3*rho[OPS_ACC8(-1,0,0)]*u0[OPS_ACC1(-1,0,0)] + (rc3)*rho[OPS_ACC8(1,0,0)]*u0[OPS_ACC1(1,0,0)] - rc2*rho[OPS_ACC8(2,0,0)]*u0[OPS_ACC1(2,0,0)]);
    double temp_eval21 = rinv4*((rc2)*rhou1[OPS_ACC10(0,-2,0)] - rc3*rhou1[OPS_ACC10(0,-1,0)] + (rc3)*rhou1[OPS_ACC10(0,1,0)] - rc2*rhou1[OPS_ACC10(0,2,0)]);
    double temp_eval22 = rinv1*((rc2)*rho[OPS_ACC8(0,0,-2)]*u2[OPS_ACC15(0,0,-2)] - rc3*rho[OPS_ACC8(0,0,-1)]*u2[OPS_ACC15(0,0,-1)] + (rc3)*rho[OPS_ACC8(0,0,1)]*u2[OPS_ACC15(0,0,1)] - rc2*rho[OPS_ACC8(0,0,2)]*u2[OPS_ACC15(0,0,2)]);
    double temp_eval23 = rinv9*(-rc7*u0[OPS_ACC1(0,0,0)] - rc2*u0[OPS_ACC1(-2,0,0)] + (rc8)*u0[OPS_ACC1(-1,0,0)] + (rc8)*u0[OPS_ACC1(1,0,0)] - rc2*u0[OPS_ACC1(2,0,0)]);
    double temp_eval24 = rinv5*((rc2)*p[OPS_ACC3(-2,0,0)] - rc3*p[OPS_ACC3(-1,0,0)] + (rc3)*p[OPS_ACC3(1,0,0)] - rc2*p[OPS_ACC3(2,0,0)]);
    double temp_eval25 = rinv10*(-rc7*T[OPS_ACC17(0,0,0)] - rc2*T[OPS_ACC17(0,-2,0)] + (rc8)*T[OPS_ACC17(0,-1,0)] + (rc8)*T[OPS_ACC17(0,1,0)] - rc2*T[OPS_ACC17(0,2,0)]);
    double temp_eval26 = rinv1*((rc2)*rhou1[OPS_ACC10(0,0,-2)]*u2[OPS_ACC15(0,0,-2)] - rc3*rhou1[OPS_ACC10(0,0,-1)]*u2[OPS_ACC15(0,0,-1)] + (rc3)*rhou1[OPS_ACC10(0,0,1)]*u2[OPS_ACC15(0,0,1)] - rc2*rhou1[OPS_ACC10(0,0,2)]*u2[OPS_ACC15(0,0,2)]);
    double temp_eval27 = rinv1*((rc2)*p[OPS_ACC3(0,0,-2)]*u2[OPS_ACC15(0,0,-2)] - rc3*p[OPS_ACC3(0,0,-1)]*u2[OPS_ACC15(0,0,-1)] + (rc3)*p[OPS_ACC3(0,0,1)]*u2[OPS_ACC15(0,0,1)] - rc2*p[OPS_ACC3(0,0,2)]*u2[OPS_ACC15(0,0,2)]);
    double temp_eval28 = rinv10*(-rc7*u2[OPS_ACC15(0,0,0)] - rc2*u2[OPS_ACC15(0,-2,0)] + (rc8)*u2[OPS_ACC15(0,-1,0)] + (rc8)*u2[OPS_ACC15(0,1,0)] - rc2*u2[OPS_ACC15(0,2,0)]);
    double temp_eval29 = rinv5*((rc2)*rhoE[OPS_ACC2(-2,0,0)] - rc3*rhoE[OPS_ACC2(-1,0,0)] + (rc3)*rhoE[OPS_ACC2(1,0,0)] - rc2*rhoE[OPS_ACC2(2,0,0)]);
    double temp_eval30 = rinv1*((rc2)*rhou0[OPS_ACC12(0,0,-2)]*u2[OPS_ACC15(0,0,-2)] - rc3*rhou0[OPS_ACC12(0,0,-1)]*u2[OPS_ACC15(0,0,-1)] + (rc3)*rhou0[OPS_ACC12(0,0,1)]*u2[OPS_ACC15(0,0,1)] - rc2*rhou0[OPS_ACC12(0,0,2)]*u2[OPS_ACC15(0,0,2)]);
    double temp_eval31 = rinv1*((rc2)*rhou2[OPS_ACC9(0,0,-2)] - rc3*rhou2[OPS_ACC9(0,0,-1)] + (rc3)*rhou2[OPS_ACC9(0,0,1)] - rc2*rhou2[OPS_ACC9(0,0,2)]);
    double temp_eval32 = rinv10*(-rc7*u1[OPS_ACC14(0,0,0)] - rc2*u1[OPS_ACC14(0,-2,0)] + (rc8)*u1[OPS_ACC14(0,-1,0)] + (rc8)*u1[OPS_ACC14(0,1,0)] - rc2*u1[OPS_ACC14(0,2,0)]);
    double temp_eval33 = rinv4*((rc2)*p[OPS_ACC3(0,-2,0)] - rc3*p[OPS_ACC3(0,-1,0)] + (rc3)*p[OPS_ACC3(0,1,0)] - rc2*p[OPS_ACC3(0,2,0)]);
    double temp_eval34 = rinv4*((rc2)*rhou2[OPS_ACC9(0,-2,0)]*u1[OPS_ACC14(0,-2,0)] - rc3*rhou2[OPS_ACC9(0,-1,0)]*u1[OPS_ACC14(0,-1,0)] + (rc3)*rhou2[OPS_ACC9(0,1,0)]*u1[OPS_ACC14(0,1,0)] - rc2*rhou2[OPS_ACC9(0,2,0)]*u1[OPS_ACC14(0,2,0)]);
    double temp_eval35 = rinv9*(-rc7*u1[OPS_ACC14(0,0,0)] - rc2*u1[OPS_ACC14(-2,0,0)] + (rc8)*u1[OPS_ACC14(-1,0,0)] + (rc8)*u1[OPS_ACC14(1,0,0)] - rc2*u1[OPS_ACC14(2,0,0)]);
    double temp_eval36 = rinv5*((rc2)*rhou0[OPS_ACC12(-2,0,0)]*u0[OPS_ACC1(-2,0,0)] - rc3*rhou0[OPS_ACC12(-1,0,0)]*u0[OPS_ACC1(-1,0,0)] + (rc3)*rhou0[OPS_ACC12(1,0,0)]*u0[OPS_ACC1(1,0,0)] - rc2*rhou0[OPS_ACC12(2,0,0)]*u0[OPS_ACC1(2,0,0)]);
    double temp_eval37 = rinv6*(-rc7*T[OPS_ACC17(0,0,0)] - rc2*T[OPS_ACC17(0,0,-2)] + (rc8)*T[OPS_ACC17(0,0,-1)] + (rc8)*T[OPS_ACC17(0,0,1)] - rc2*T[OPS_ACC17(0,0,2)]);
    double temp_eval38 = rinv1*((rc2)*rho[OPS_ACC8(0,0,-2)] - rc3*rho[OPS_ACC8(0,0,-1)] + (rc3)*rho[OPS_ACC8(0,0,1)] - rc2*rho[OPS_ACC8(0,0,2)]);
    double temp_eval39 = rinv1*((rc2)*rhou2[OPS_ACC9(0,0,-2)]*u2[OPS_ACC15(0,0,-2)] - rc3*rhou2[OPS_ACC9(0,0,-1)]*u2[OPS_ACC15(0,0,-1)] + (rc3)*rhou2[OPS_ACC9(0,0,1)]*u2[OPS_ACC15(0,0,1)] - rc2*rhou2[OPS_ACC9(0,0,2)]*u2[OPS_ACC15(0,0,2)]);
    double temp_eval40 = rinv1*((rc2)*rhoE[OPS_ACC2(0,0,-2)]*u2[OPS_ACC15(0,0,-2)] - rc3*rhoE[OPS_ACC2(0,0,-1)]*u2[OPS_ACC15(0,0,-1)] + (rc3)*rhoE[OPS_ACC2(0,0,1)]*u2[OPS_ACC15(0,0,1)] - rc2*rhoE[OPS_ACC2(0,0,2)]*u2[OPS_ACC15(0,0,2)]);
    double temp_eval41 = rinv9*(-rc7*T[OPS_ACC17(0,0,0)] - rc2*T[OPS_ACC17(-2,0,0)] + (rc8)*T[OPS_ACC17(-1,0,0)] + (rc8)*T[OPS_ACC17(1,0,0)] - rc2*T[OPS_ACC17(2,0,0)]);
    double temp_eval42 = rinv5*((rc2)*rhou2[OPS_ACC9(-2,0,0)]*u0[OPS_ACC1(-2,0,0)] - rc3*rhou2[OPS_ACC9(-1,0,0)]*u0[OPS_ACC1(-1,0,0)] + (rc3)*rhou2[OPS_ACC9(1,0,0)]*u0[OPS_ACC1(1,0,0)] - rc2*rhou2[OPS_ACC9(2,0,0)]*u0[OPS_ACC1(2,0,0)]);
    double temp_eval43 = rinv5*((rc2)*rhoE[OPS_ACC2(-2,0,0)]*u0[OPS_ACC1(-2,0,0)] - rc3*rhoE[OPS_ACC2(-1,0,0)]*u0[OPS_ACC1(-1,0,0)] + (rc3)*rhoE[OPS_ACC2(1,0,0)]*u0[OPS_ACC1(1,0,0)] - rc2*rhoE[OPS_ACC2(2,0,0)]*u0[OPS_ACC1(2,0,0)]);
    double temp_eval44 = rinv5*((rc2)*p[OPS_ACC3(-2,0,0)]*u0[OPS_ACC1(-2,0,0)] - rc3*p[OPS_ACC3(-1,0,0)]*u0[OPS_ACC1(-1,0,0)] + (rc3)*p[OPS_ACC3(1,0,0)]*u0[OPS_ACC1(1,0,0)] - rc2*p[OPS_ACC3(2,0,0)]*u0[OPS_ACC1(2,0,0)]);
    double temp_eval45 = rinv4*((rc2)*rhou1[OPS_ACC10(0,-2,0)]*u1[OPS_ACC14(0,-2,0)] - rc3*rhou1[OPS_ACC10(0,-1,0)]*u1[OPS_ACC14(0,-1,0)] + (rc3)*rhou1[OPS_ACC10(0,1,0)]*u1[OPS_ACC14(0,1,0)] - rc2*rhou1[OPS_ACC10(0,2,0)]*u1[OPS_ACC14(0,2,0)]);
    double temp_eval46 = rinv4*((rc2)*rhou2[OPS_ACC9(0,-2,0)] - rc3*rhou2[OPS_ACC9(0,-1,0)] + (rc3)*rhou2[OPS_ACC9(0,1,0)] - rc2*rhou2[OPS_ACC9(0,2,0)]);
    double temp_eval47 = rinv1*((rc2)*rhou0[OPS_ACC12(0,0,-2)] - rc3*rhou0[OPS_ACC12(0,0,-1)] + (rc3)*rhou0[OPS_ACC12(0,0,1)] - rc2*rhou0[OPS_ACC12(0,0,2)]);
    double temp_eval48 = rinv4*((rc2)*wk6[OPS_ACC7(0,-2,0)] - rc3*wk6[OPS_ACC7(0,-1,0)] + (rc3)*wk6[OPS_ACC7(0,1,0)] - rc2*wk6[OPS_ACC7(0,2,0)]);
    double temp_eval49 = rinv1*((rc2)*wk5[OPS_ACC6(0,0,-2)] - rc3*wk5[OPS_ACC6(0,0,-1)] + (rc3)*wk5[OPS_ACC6(0,0,1)] - rc2*wk5[OPS_ACC6(0,0,2)]);
    double temp_eval50 = rinv4*((rc2)*wk4[OPS_ACC11(0,-2,0)] - rc3*wk4[OPS_ACC11(0,-1,0)] + (rc3)*wk4[OPS_ACC11(0,1,0)] - rc2*wk4[OPS_ACC11(0,2,0)]);
    double temp_eval51 = rinv1*((rc2)*wk3[OPS_ACC0(0,0,-2)] - rc3*wk3[OPS_ACC0(0,0,-1)] + (rc3)*wk3[OPS_ACC0(0,0,1)] - rc2*wk3[OPS_ACC0(0,0,2)]);
    double temp_eval52 = rinv1*((rc2)*wk6[OPS_ACC7(0,0,-2)] - rc3*wk6[OPS_ACC7(0,0,-1)] + (rc3)*wk6[OPS_ACC7(0,0,1)] - rc2*wk6[OPS_ACC7(0,0,2)]);
    double temp_eval53 = rinv1*((rc2)*wk2[OPS_ACC5(0,0,-2)] - rc3*wk2[OPS_ACC5(0,0,-1)] + (rc3)*wk2[OPS_ACC5(0,0,1)] - rc2*wk2[OPS_ACC5(0,0,2)]);

    wk9[OPS_ACC23(0,0,0)] = -0.5*temp_eval18*u0[OPS_ACC1(0,0,0)] - 0.5*temp_eval20 - 0.5*temp_eval22 - 0.5*temp_eval38*u2[OPS_ACC15(0,0,0)] - 0.5*temp_eval6 - 0.5*temp_eval9*u1[OPS_ACC14(0,0,0)] - 0.5*(wk3[OPS_ACC0(0,0,0)] + wk6[OPS_ACC7(0,0,0)] + wk7[OPS_ACC13(0,0,0)])*rho[OPS_ACC8(0,0,0)];

    wk10[OPS_ACC19(0,0,0)] = -0.5*temp_eval10 - 0.5*temp_eval2*u1[OPS_ACC14(0,0,0)] - temp_eval24 - 0.5*temp_eval30 - 0.5*temp_eval36 - 0.5*temp_eval47*u2[OPS_ACC15(0,0,0)] - 0.5*temp_eval5*u0[OPS_ACC1(0,0,0)] + rinv11*(temp_eval15 + temp_eval50) + rinv11*(temp_eval53 + temp_eval7) + rinv11*((rc8)*temp_eval23 - rc3*temp_eval50 - rc3*temp_eval53) - 0.5*(wk3[OPS_ACC0(0,0,0)] + wk6[OPS_ACC7(0,0,0)] + wk7[OPS_ACC13(0,0,0)])*rhou0[OPS_ACC12(0,0,0)];

    wk11[OPS_ACC20(0,0,0)] = -0.5*temp_eval1*u2[OPS_ACC15(0,0,0)] - 0.5*temp_eval14 - 0.5*temp_eval21*u1[OPS_ACC14(0,0,0)] - 0.5*temp_eval26 - temp_eval33 - 0.5*temp_eval4*u0[OPS_ACC1(0,0,0)] - 0.5*temp_eval45 + rinv11*(temp_eval11 + temp_eval49) + rinv11*(temp_eval35 + temp_eval48) + rinv11*((rc8)*temp_eval32 - rc3*temp_eval48 - rc3*temp_eval49) - 0.5*(wk3[OPS_ACC0(0,0,0)] + wk6[OPS_ACC7(0,0,0)] + wk7[OPS_ACC13(0,0,0)])*rhou1[OPS_ACC10(0,0,0)];

    wk12[OPS_ACC21(0,0,0)] = -temp_eval16 - 0.5*temp_eval3*u0[OPS_ACC1(0,0,0)] - 0.5*temp_eval31*u2[OPS_ACC15(0,0,0)] - 0.5*temp_eval34 - 0.5*temp_eval39 - 0.5*temp_eval42 - 0.5*temp_eval46*u1[OPS_ACC14(0,0,0)] + rinv11*(temp_eval13 + temp_eval52) + rinv11*(temp_eval28 + temp_eval51) + rinv11*(-rc3*temp_eval51 - rc3*temp_eval52 + (rc8)*temp_eval8) - 0.5*(wk3[OPS_ACC0(0,0,0)] + wk6[OPS_ACC7(0,0,0)] + wk7[OPS_ACC13(0,0,0)])*rhou2[OPS_ACC9(0,0,0)];

    wk13[OPS_ACC22(0,0,0)] = -0.5*temp_eval0*u2[OPS_ACC15(0,0,0)] - temp_eval12 - 0.5*temp_eval17 - 0.5*temp_eval19*u1[OPS_ACC14(0,0,0)] + temp_eval25*rinv11*rinv12*rinv13*rinv14 - temp_eval27 - 0.5*temp_eval29*u0[OPS_ACC1(0,0,0)] + temp_eval37*rinv11*rinv12*rinv13*rinv14 - 0.5*temp_eval40 + temp_eval41*rinv11*rinv12*rinv13*rinv14 - 0.5*temp_eval43 - temp_eval44 + rinv11*(temp_eval11 + temp_eval49)*u1[OPS_ACC14(0,0,0)] + rinv11*(temp_eval13 + temp_eval52)*u2[OPS_ACC15(0,0,0)] + rinv11*(temp_eval15 + temp_eval50)*u0[OPS_ACC1(0,0,0)] + rinv11*(temp_eval28 + temp_eval51)*u2[OPS_ACC15(0,0,0)] + rinv11*(temp_eval35 + temp_eval48)*u1[OPS_ACC14(0,0,0)] + rinv11*(temp_eval53 + temp_eval7)*u0[OPS_ACC1(0,0,0)] + rinv11*(wk0[OPS_ACC16(0,0,0)] + wk2[OPS_ACC5(0,0,0)])*wk0[OPS_ACC16(0,0,0)] + rinv11*(wk0[OPS_ACC16(0,0,0)] + wk2[OPS_ACC5(0,0,0)])*wk2[OPS_ACC5(0,0,0)] + rinv11*(wk1[OPS_ACC4(0,0,0)] + wk4[OPS_ACC11(0,0,0)])*wk1[OPS_ACC4(0,0,0)] + rinv11*(wk1[OPS_ACC4(0,0,0)] + wk4[OPS_ACC11(0,0,0)])*wk4[OPS_ACC11(0,0,0)] + rinv11*(wk5[OPS_ACC6(0,0,0)] + wk8[OPS_ACC18(0,0,0)])*wk5[OPS_ACC6(0,0,0)] + rinv11*(wk5[OPS_ACC6(0,0,0)] + wk8[OPS_ACC18(0,0,0)])*wk8[OPS_ACC18(0,0,0)] + rinv11*((rc8)*temp_eval23 - rc3*temp_eval50 - rc3*temp_eval53)*u0[OPS_ACC1(0,0,0)] + rinv11*((rc8)*temp_eval32 - rc3*temp_eval48 - rc3*temp_eval49)*u1[OPS_ACC14(0,0,0)] + rinv11*(-rc3*temp_eval51 - rc3*temp_eval52 + (rc8)*temp_eval8)*u2[OPS_ACC15(0,0,0)] + rinv11*(-rc3*wk3[OPS_ACC0(0,0,0)] - rc3*wk6[OPS_ACC7(0,0,0)] + (rc8)*wk7[OPS_ACC13(0,0,0)])*wk7[OPS_ACC13(0,0,0)] + rinv11*(-rc3*wk3[OPS_ACC0(0,0,0)] + (rc8)*wk6[OPS_ACC7(0,0,0)] - rc3*wk7[OPS_ACC13(0,0,0)])*wk6[OPS_ACC7(0,0,0)] + rinv11*((rc8)*wk3[OPS_ACC0(0,0,0)] - rc3*wk6[OPS_ACC7(0,0,0)] - rc3*wk7[OPS_ACC13(0,0,0)])*wk3[OPS_ACC0(0,0,0)] - 0.5*(wk3[OPS_ACC0(0,0,0)] + wk6[OPS_ACC7(0,0,0)] + wk7[OPS_ACC13(0,0,0)])*rhoE[OPS_ACC2(0,0,0)];
}



__kernel void ops_taylor_green_vortex_block0_12_kernel(
__global const double* restrict arg0,
__global const double* restrict arg1,
__global const double* restrict arg2,
__global const double* restrict arg3,
__global const double* restrict arg4,
__global const double* restrict arg5,
__global const double* restrict arg6,
__global const double* restrict arg7,
__global const double* restrict arg8,
__global const double* restrict arg9,
__global const double* restrict arg10,
__global const double* restrict arg11,
__global const double* restrict arg12,
__global const double* restrict arg13,
__global const double* restrict arg14,
__global const double* restrict arg15,
__global const double* restrict arg16,
__global const double* restrict arg17,
__global const double* restrict arg18,
__global double* restrict arg19,
__global double* restrict arg20,
__global double* restrict arg21,
__global double* restrict arg22,
__global double* restrict arg23,
const double rinv9,
const double rinv1,
const double rinv4,
const double rinv5,
const double rinv6,
const double rinv12,
const double rinv13,
const double rinv10,
const double rinv11,
const double rc8,
const double rinv14,
const double rc7,
const double rc2,
const double rc3,
const int base0,
const int base1,
const int base2,
const int base3,
const int base4,
const int base5,
const int base6,
const int base7,
const int base8,
const int base9,
const int base10,
const int base11,
const int base12,
const int base13,
const int base14,
const int base15,
const int base16,
const int base17,
const int base18,
const int base19,
const int base20,
const int base21,
const int base22,
const int base23,
const int size0,
const int size1,
const int size2 ){


  int idx_y = get_global_id(1);
  int idx_z = get_global_id(2);
  int idx_x = get_global_id(0);

  if (idx_x < size0 && idx_y < size1 && idx_z < size2) {
    taylor_green_vortex_block0_12_kernel(&arg0[base0 + idx_x * 1*1 + idx_y * 1*1 * xdim0_taylor_green_vortex_block0_12_kernel + idx_z * 1*1 * xdim0_taylor_green_vortex_block0_12_kernel * ydim0_taylor_green_vortex_block0_12_kernel],
                                         &arg1[base1 + idx_x * 1*1 + idx_y * 1*1 * xdim1_taylor_green_vortex_block0_12_kernel + idx_z * 1*1 * xdim1_taylor_green_vortex_block0_12_kernel * ydim1_taylor_green_vortex_block0_12_kernel],
                                         &arg2[base2 + idx_x * 1*1 + idx_y * 1*1 * xdim2_taylor_green_vortex_block0_12_kernel + idx_z * 1*1 * xdim2_taylor_green_vortex_block0_12_kernel * ydim2_taylor_green_vortex_block0_12_kernel],
                                         &arg3[base3 + idx_x * 1*1 + idx_y * 1*1 * xdim3_taylor_green_vortex_block0_12_kernel + idx_z * 1*1 * xdim3_taylor_green_vortex_block0_12_kernel * ydim3_taylor_green_vortex_block0_12_kernel],
                                         &arg4[base4 + idx_x * 1*1 + idx_y * 1*1 * xdim4_taylor_green_vortex_block0_12_kernel + idx_z * 1*1 * xdim4_taylor_green_vortex_block0_12_kernel * ydim4_taylor_green_vortex_block0_12_kernel],
                                         &arg5[base5 + idx_x * 1*1 + idx_y * 1*1 * xdim5_taylor_green_vortex_block0_12_kernel + idx_z * 1*1 * xdim5_taylor_green_vortex_block0_12_kernel * ydim5_taylor_green_vortex_block0_12_kernel],
                                         &arg6[base6 + idx_x * 1*1 + idx_y * 1*1 * xdim6_taylor_green_vortex_block0_12_kernel + idx_z * 1*1 * xdim6_taylor_green_vortex_block0_12_kernel * ydim6_taylor_green_vortex_block0_12_kernel],
                                         &arg7[base7 + idx_x * 1*1 + idx_y * 1*1 * xdim7_taylor_green_vortex_block0_12_kernel + idx_z * 1*1 * xdim7_taylor_green_vortex_block0_12_kernel * ydim7_taylor_green_vortex_block0_12_kernel],
                                         &arg8[base8 + idx_x * 1*1 + idx_y * 1*1 * xdim8_taylor_green_vortex_block0_12_kernel + idx_z * 1*1 * xdim8_taylor_green_vortex_block0_12_kernel * ydim8_taylor_green_vortex_block0_12_kernel],
                                         &arg9[base9 + idx_x * 1*1 + idx_y * 1*1 * xdim9_taylor_green_vortex_block0_12_kernel + idx_z * 1*1 * xdim9_taylor_green_vortex_block0_12_kernel * ydim9_taylor_green_vortex_block0_12_kernel],
                                         &arg10[base10 + idx_x * 1*1 + idx_y * 1*1 * xdim10_taylor_green_vortex_block0_12_kernel + idx_z * 1*1 * xdim10_taylor_green_vortex_block0_12_kernel * ydim10_taylor_green_vortex_block0_12_kernel],
                                         &arg11[base11 + idx_x * 1*1 + idx_y * 1*1 * xdim11_taylor_green_vortex_block0_12_kernel + idx_z * 1*1 * xdim11_taylor_green_vortex_block0_12_kernel * ydim11_taylor_green_vortex_block0_12_kernel],
                                         &arg12[base12 + idx_x * 1*1 + idx_y * 1*1 * xdim12_taylor_green_vortex_block0_12_kernel + idx_z * 1*1 * xdim12_taylor_green_vortex_block0_12_kernel * ydim12_taylor_green_vortex_block0_12_kernel],
                                         &arg13[base13 + idx_x * 1*1 + idx_y * 1*1 * xdim13_taylor_green_vortex_block0_12_kernel + idx_z * 1*1 * xdim13_taylor_green_vortex_block0_12_kernel * ydim13_taylor_green_vortex_block0_12_kernel],
                                         &arg14[base14 + idx_x * 1*1 + idx_y * 1*1 * xdim14_taylor_green_vortex_block0_12_kernel + idx_z * 1*1 * xdim14_taylor_green_vortex_block0_12_kernel * ydim14_taylor_green_vortex_block0_12_kernel],
                                         &arg15[base15 + idx_x * 1*1 + idx_y * 1*1 * xdim15_taylor_green_vortex_block0_12_kernel + idx_z * 1*1 * xdim15_taylor_green_vortex_block0_12_kernel * ydim15_taylor_green_vortex_block0_12_kernel],
                                         &arg16[base16 + idx_x * 1*1 + idx_y * 1*1 * xdim16_taylor_green_vortex_block0_12_kernel + idx_z * 1*1 * xdim16_taylor_green_vortex_block0_12_kernel * ydim16_taylor_green_vortex_block0_12_kernel],
                                         &arg17[base17 + idx_x * 1*1 + idx_y * 1*1 * xdim17_taylor_green_vortex_block0_12_kernel + idx_z * 1*1 * xdim17_taylor_green_vortex_block0_12_kernel * ydim17_taylor_green_vortex_block0_12_kernel],
                                         &arg18[base18 + idx_x * 1*1 + idx_y * 1*1 * xdim18_taylor_green_vortex_block0_12_kernel + idx_z * 1*1 * xdim18_taylor_green_vortex_block0_12_kernel * ydim18_taylor_green_vortex_block0_12_kernel],
                                         &arg19[base19 + idx_x * 1*1 + idx_y * 1*1 * xdim19_taylor_green_vortex_block0_12_kernel + idx_z * 1*1 * xdim19_taylor_green_vortex_block0_12_kernel * ydim19_taylor_green_vortex_block0_12_kernel],
                                         &arg20[base20 + idx_x * 1*1 + idx_y * 1*1 * xdim20_taylor_green_vortex_block0_12_kernel + idx_z * 1*1 * xdim20_taylor_green_vortex_block0_12_kernel * ydim20_taylor_green_vortex_block0_12_kernel],
                                         &arg21[base21 + idx_x * 1*1 + idx_y * 1*1 * xdim21_taylor_green_vortex_block0_12_kernel + idx_z * 1*1 * xdim21_taylor_green_vortex_block0_12_kernel * ydim21_taylor_green_vortex_block0_12_kernel],
                                         &arg22[base22 + idx_x * 1*1 + idx_y * 1*1 * xdim22_taylor_green_vortex_block0_12_kernel + idx_z * 1*1 * xdim22_taylor_green_vortex_block0_12_kernel * ydim22_taylor_green_vortex_block0_12_kernel],
                                         &arg23[base23 + idx_x * 1*1 + idx_y * 1*1 * xdim23_taylor_green_vortex_block0_12_kernel + idx_z * 1*1 * xdim23_taylor_green_vortex_block0_12_kernel * ydim23_taylor_green_vortex_block0_12_kernel],
                                         rinv9,
                                         rinv1,
                                         rinv4,
                                         rinv5,
                                         rinv6,
                                         rinv12,
                                         rinv13,
                                         rinv10,
                                         rinv11,
                                         rc8,
                                         rinv14,
                                         rc7,
                                         rc2,
                                         rc3);
  }

}
